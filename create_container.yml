---
- name: Create container
  hosts: localhost
  become: yes
  vars:
    container_name: "{{ container_name }}"
    ovs_bridge_name: "{{ ovs_bridge_name }}"
    veth_host: "{{ veth_host }}"
    veth_container: "{{ veth_container }}"

  tasks:
    - name: Ensure docker directory is present
      ansible.builtin.file:
        path: ./docker
        state: directory

    - name: Create Dockerfile if it does not exist
      copy:
        dest: "./docker/Dockerfile"
        content: |
          FROM ubuntu:22.04
          # start getting needed packages
          RUN apt update && apt install -y net-tools inetutils-ping iproute2 openssh-server sudo iptables dnsmasq
          CMD tail -f /dev/null
        force: no

    - name: Build Docker image using shell if it does not exist locally
      ansible.builtin.shell:
        cmd: "docker build -t routerc:latest ./docker"
        executable: /bin/bash
      register: docker_build_result
      failed_when: docker_build_result.rc != 0

    - name: Check for existing Docker container
      ansible.builtin.command:
        cmd: "docker ps -a --filter name={{ container_name }} --format '{{ '{{.Names}}' }}'"
      register: docker_ps

    - name: Create and start Docker container if it doesn't exist
      ansible.builtin.shell:
        cmd: "docker run -d --name {{ container_name }} --network none -h {{ container_name }} routerc:latest"
      when: container_name not in docker_ps.stdout

    - name: Create script to link container namespace to netns if not present
      copy:
        dest: "./container2ns.sh"
        content: |
          #!/bin/bash
          cn=$1
          cnpid=$(docker inspect $cn | grep '"Pid"' | awk '{ print $2 }' | sed 's/,.*//' )
          ln -sf /proc/$cnpid/ns/net /var/run/netns/$cn
        force: no

    - name: Ensure script is executable
      command: chmod +x ./container2ns.sh

    - name: Execute the container to namespace linking script
      command: ./container2ns.sh {{ container_name }}

    - name: Create veth pair
      command: "ip link add {{ veth_host }} type veth peer name {{ veth_container }}"

    - name: Attach one end of veth pair to the container
      command: "ip link set {{ veth_container }} netns {{ container_name }}"

    - name: Attach the other end of veth pair to the OVS bridge
      command: "ovs-vsctl add-port {{ ovs_bridge_name }} {{ veth_host }}"

    - name: Set interface up in the container namespace
      command: "ip netns exec {{ container_name }} ip link set {{ veth_container }} up"

    - name: Set interface up on the host
      command: "ip link set {{ veth_host }} up"
    
    - name: Run dhclient inside the container
      command: ip netns exec {{ container_name }} dhclient {{ veth_container }}
